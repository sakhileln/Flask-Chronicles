name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  format:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install black
        run: |
          python -m pip install black
      - name: Check code formatting with black
        run: |
          black --check --diff config.py flask_chronicles.py tests.py app/forms.py app/routes.py app/models.py app/__init__.py

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install pylint
        run: |
          python -m pip install pylint
          python -m pip install -r requirements.txt
      - name: Run Pylint
        run: |
          pylint --disable=C0413 --ignore-paths=migrations,venv,__pycache__ .

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install coverage
          pip install -r requirements.txt  # Ensure all dependencies are installed

      - name: Run Tests with coverage
        run: |
          coverage run tests.py  # Run tests using pytest with coverage
          coverage report  # Show coverage report
